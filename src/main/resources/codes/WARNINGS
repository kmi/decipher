; file: /home/jac2349/kmi/decipher/src/main/resources/codes/lisp-process-input.lisp
; in: DEFUN REDUCE-VECTOR
;     (REMOVE-INDEXES INDEX-LIST (CADR EVENT))
; 
; caught STYLE-WARNING:
;   undefined function: REMOVE-INDEXES
; 
; compilation unit finished
;   Undefined function:
;     REMOVE-INDEXES
;   caught 1 STYLE-WARNING condition

; in: DEFUN TRANSLATE-TO-NODE
;     (/ (LENGTH EVENTS) *EVENT-TOTAL*)
; 
; caught WARNING:
;   undefined variable: *EVENT-TOTAL*

;     (/ (LENGTH OBJECTS) *OBJECT-TOTAL*)
; 
; caught WARNING:
;   undefined variable: *OBJECT-TOTAL*

;     (FIRST *WEIGHTS*)
; ==>
;   (CAR *WEIGHTS*)
; 
; caught WARNING:
;   undefined variable: *WEIGHTS*

;     (MEAN-SIMILARITIES-OF-CLUSTER EVENTS)
; 
; caught STYLE-WARNING:
;   undefined function: MEAN-SIMILARITIES-OF-CLUSTER
; 
; compilation unit finished
;   Undefined function:
;     MEAN-SIMILARITIES-OF-CLUSTER
;   Undefined variables:
;     *EVENT-TOTAL* *OBJECT-TOTAL* *WEIGHTS*
;   caught 3 WARNING conditions
;   caught 1 STYLE-WARNING condition

; in: DEFUN MEAN-SIMILARITIES-OF-CLUSTER
;     (SIMILARITIES-OF-CLUSTER EVENTS)
; 
; caught STYLE-WARNING:
;   undefined function: SIMILARITIES-OF-CLUSTER
; 
; compilation unit finished
;   Undefined function:
;     SIMILARITIES-OF-CLUSTER
;   caught 1 STYLE-WARNING condition

; in: DEFUN SIMILARITIES-OF-CLUSTER
;     (COSINE-SIMILARITY (CADR HEAD) (CADR REST-EVENT))
; 
; caught STYLE-WARNING:
;   undefined function: COSINE-SIMILARITY
; 
; compilation unit finished
;   Undefined function:
;     COSINE-SIMILARITY
;   caught 1 STYLE-WARNING condition

; in: DEFUN COMPARE-CLUSTERS
;     (COSINE-SIMILARITY C1-ITEM C2-ITEM)
; 
; caught STYLE-WARNING:
;   undefined function: COSINE-SIMILARITY

;     (SUM DISTANCE-LIST)
; 
; caught STYLE-WARNING:
;   undefined function: SUM
; 
; compilation unit finished
;   Undefined functions:
;     COSINE-SIMILARITY SUM
;   caught 2 STYLE-WARNING conditions

; in: DEFUN COMPARE-EVENT-LISTS
;     (COSINE-SIMILARITY (CADR C1-ITEM) (CADR C2-ITEM))
; 
; caught STYLE-WARNING:
;   undefined function: COSINE-SIMILARITY

;     (SUM DISTANCE-LIST)
; 
; caught STYLE-WARNING:
;   undefined function: SUM
; 
; compilation unit finished
;   Undefined functions:
;     COSINE-SIMILARITY SUM
;   caught 2 STYLE-WARNING conditions

; in: DEFUN RANDOM-HILL-CLIMBING
;     (SETQ UNTESTED-NODES *NODES*)
; ==>
;   (THE T *NODES*)
; 
; caught WARNING:
;   undefined variable: *NODES*

;     (HILL-CLIMBING NODE)
; 
; caught STYLE-WARNING:
;   undefined function: HILL-CLIMBING
; 
; compilation unit finished
;   Undefined function:
;     HILL-CLIMBING
;   Undefined variable:
;     *NODES*
;   caught 1 WARNING condition
;   caught 1 STYLE-WARNING condition

; in: DEFUN HILL-CLIMBING
;     (EVALUATE-NEXT-NODE ITEM CURRENT-NODE)
; 
; caught STYLE-WARNING:
;   undefined function: EVALUATE-NEXT-NODE

;     (GET-NEIGHBOURS CURRENT-NODE)
; 
; caught STYLE-WARNING:
;   undefined function: GET-NEIGHBOURS

;     (NEW-CURRENT-NODE NEXT-NODE CURRENT-NODE NEXT-EVAL NEXT-COSINE NEXT-COVERAGE
;      NEXT-OBJECT-COVERAGE)
; 
; caught STYLE-WARNING:
;   undefined function: NEW-CURRENT-NODE
; 
; compilation unit finished
;   Undefined functions:
;     EVALUATE-NEXT-NODE GET-NEIGHBOURS NEW-CURRENT-NODE
;   caught 3 STYLE-WARNING conditions

; in: DEFUN GET-NEIGHBOURS
;     (SETQ ALL-NODES *NODES*)
; ==>
;   (THE T *NODES*)
; 
; caught WARNING:
;   undefined variable: *NODES*
; 
; compilation unit finished
;   Undefined variable:
;     *NODES*
;   caught 1 WARNING condition

; in: DEFUN EVALUATE-NEXT-NODE
;     (> *EVENT-TOTAL* 0)
; 
; caught WARNING:
;   undefined variable: *EVENT-TOTAL*

;     (> *OBJECT-TOTAL* 0)
; 
; caught WARNING:
;   undefined variable: *OBJECT-TOTAL*

;     (FIRST *WEIGHTS*)
; ==>
;   (CAR *WEIGHTS*)
; 
; caught WARNING:
;   undefined variable: *WEIGHTS*

;     (EVALUATE-NEXT-NODE-COHERENCE NEW-NODE CURRENT-NODE)
; 
; caught STYLE-WARNING:
;   undefined function: EVALUATE-NEXT-NODE-COHERENCE

;     (EVALUATE-NEXT-NODE-COVERAGE NEW-NODE CURRENT-NODE)
; 
; caught STYLE-WARNING:
;   undefined function: EVALUATE-NEXT-NODE-COVERAGE

;     (EVALUATE-NEXT-NODE-OBJECTS NEW-NODE CURRENT-NODE)
; 
; caught STYLE-WARNING:
;   undefined function: EVALUATE-NEXT-NODE-OBJECTS
; 
; compilation unit finished
;   Undefined functions:
;     EVALUATE-NEXT-NODE-COHERENCE EVALUATE-NEXT-NODE-COVERAGE EVALUATE-NEXT-NODE-OBJECTS
;   Undefined variables:
;     *EVENT-TOTAL* *OBJECT-TOTAL* *WEIGHTS*
;   caught 3 WARNING conditions
;   caught 3 STYLE-WARNING conditions

; in: DEFUN EVALUATE-NEXT-NODE-COVERAGE
;     (/ (LENGTH (APPEND NEW-EVENTS CURRENT-EVENTS)) *EVENT-TOTAL*)
; 
; caught WARNING:
;   undefined variable: *EVENT-TOTAL*
; 
; compilation unit finished
;   Undefined variable:
;     *EVENT-TOTAL*
;   caught 1 WARNING condition

; in: DEFUN EVALUATE-NEXT-NODE-OBJECTS
;     (/ (LENGTH (APPEND NEW-OBJECTS CURRENT-OBJECTS)) *OBJECT-TOTAL*)
; 
; caught WARNING:
;   undefined variable: *OBJECT-TOTAL*
; 
; compilation unit finished
;   Undefined variable:
;     *OBJECT-TOTAL*
;   caught 1 WARNING condition

; in: DEFUN EVALUATE-NEXT-NODE-COHERENCE
;     (NUMBER-OF-PAIRS (LENGTH NEW-EVENTS))
; 
; caught STYLE-WARNING:
;   undefined function: NUMBER-OF-PAIRS
; 
; compilation unit finished
;   Undefined function:
;     NUMBER-OF-PAIRS
;   caught 1 STYLE-WARNING condition

; in: DEFUN COSINE-SIMILARITY
;     (DOT VEC-ONE VEC-TWO)
; 
; caught STYLE-WARNING:
;   undefined function: DOT

;     (MAG VEC-ONE)
; 
; caught STYLE-WARNING:
;   undefined function: MAG
; 
; compilation unit finished
;   Undefined functions:
;     DOT MAG
;   caught 2 STYLE-WARNING conditions

; in: DEFUN GET-PAIRWISE-SIMILARITY
;     (FIND (NTH I SECTION-LIST) *SECTIONS* :KEY #'CAR)
; 
; caught WARNING:
;   undefined variable: *SECTIONS*
; 
; compilation unit finished
;   Undefined variable:
;     *SECTIONS*
;   caught 1 WARNING condition

; file: /home/jac2349/kmi/decipher/src/main/resources/codes/lisp-process-input.lisp
; in: DEFUN GENERIC-SUMMARY
;     (LAMBDA (X) (SETQ N (1+ N)) (FORMAT NIL "A~A" N))
; ==>
;   #'(LAMBDA (X) (SETQ N (1+ N)) (FORMAT NIL "A~A" N))
; 
; caught STYLE-WARNING:
;   The variable X is defined but never used.

; in: DEFUN GENERIC-SUMMARY
;     (KEEP-DUPLICATES-COUNT
;      (MAPCAN (LAMBDA (EVENT) (MAPCAN (LAMBDA # #) (SECOND EVENT) EVENTS-BASIS))
;              EVENT-SUBLIST)
;      1)
; 
; caught STYLE-WARNING:
;   undefined function: KEEP-DUPLICATES-COUNT
; 
; compilation unit finished
;   Undefined function:
;     KEEP-DUPLICATES-COUNT
;   caught 2 STYLE-WARNING conditions

; in: DEFUN TEXTUAL-SUMMARY
;     (LET* ((NODE-EVENTS-LIST (MAPCAR #'NODE-EVENTS PATHS))
;            (EVENTS-BASIS *BASIS*)
;            (EVENTS-SUMMARY (MAPCAR (LAMBDA # #) NODE-EVENTS-LIST)))
;       (MAPCAR #'LIST EVENTS-SUMMARY
;               (MAPCAR
;                (LAMBDA (X)
;                  (LET #
;                    #
;                    #))
;                PATHS)
;               (MAPCAR
;                (LAMBDA (X)
;                  (LET #
;                    #
;                    #))
;                PATHS)))
; 
; caught WARNING:
;   undefined variable: *BASIS*

;     (KEEP-DUPLICATES-COUNT
;      (MAPCAN (LAMBDA (EVENT) (MAPCAN (LAMBDA # #) (SECOND EVENT) EVENTS-BASIS))
;              EVENT-SUBLIST)
;      2)
; 
; caught STYLE-WARNING:
;   undefined function: KEEP-DUPLICATES-COUNT
; 
; compilation unit finished
;   Undefined function:
;     KEEP-DUPLICATES-COUNT
;   Undefined variable:
;     *BASIS*
;   caught 1 WARNING condition
;   caught 1 STYLE-WARNING condition

; in: DEFUN MAKE-LAYERED-NARRATIVE
;     (COPY-LIST *NODES*)
; 
; caught WARNING:
;   undefined variable: *NODES*
; 
; compilation unit finished
;   Undefined variable:
;     *NODES*
;   caught 1 WARNING condition

; file: /home/jac2349/kmi/decipher/src/main/resources/codes/lisp-process-input.lisp
; in: DEFUN XML-TRAILS
;     (DOLIST (N OUTPUT)
;       (SETQ XML-STRING (CONCATENATE 'STRING XML-STRING TRAIL-START)))
; --> BLOCK LET TAGBODY UNLESS IF PROGN 
; ==>
;   (LET* ((N (CAR #:N-LIST0)))
;     (SETQ #:N-LIST0 (CDR #:N-LIST0))
;     (TAGBODY (SETQ XML-STRING (CONCATENATE 'STRING XML-STRING TRAIL-START))))
; 
; caught STYLE-WARNING:
;   The variable N is defined but never used.

; in: DEFUN XML-TRAILS
;     (SETQ DESC-END "</description>")
; 
; caught WARNING:
;   undefined variable: DESC-END

;     (SETQ DESC-START "<description>")
; 
; caught WARNING:
;   undefined variable: DESC-START

;     (SETQ SECTION-END "</section>")
; 
; caught WARNING:
;   undefined variable: SECTION-END

;     (SETQ SECTION-START "<section>")
; 
; caught WARNING:
;   undefined variable: SECTION-START

;     (SETQ SECTIONS-END "</sections>")
; 
; caught WARNING:
;   undefined variable: SECTIONS-END

;     (SETQ SECTIONS-START "<sections>")
; 
; caught WARNING:
;   undefined variable: SECTIONS-START

;     (SETQ TRAIL-START "<trail>")
; 
; caught WARNING:
;   undefined variable: TRAIL-START

;     (SETQ TRAILS-END "</trails>")
; 
; caught WARNING:
;   undefined variable: TRAILS-END

;     (SETQ TRAILS-START "<trails>")
; 
; caught WARNING:
;   undefined variable: TRAILS-START
; 
; compilation unit finished
;   Undefined variables:
;     DESC-END DESC-START SECTION-END SECTION-START SECTIONS-END SECTIONS-START TRAIL-START TRAILS-END TRAILS-START
;   caught 9 WARNING conditions
;   caught 1 STYLE-WARNING condition

; in: DEFUN NARRATIVE-PROCESS-INPUT
;     (SETQ BEST-SECTIONS (RANDOM-HILL-CLIMBING 6))
; 
; caught WARNING:
;   undefined variable: BEST-SECTIONS

;     (SETQ LAYERED-NODES (MAKE-LAYERED-NARRATIVE LINEAR-NODE))
; 
; caught WARNING:
;   undefined variable: LAYERED-NODES

;     (SETQ LAYERED-OUTPUT
;             (LIST (MAPCAR #'NODE-SECTIONS LAYERED-NODES)
;                   (TEXTUAL-SUMMARY LAYERED-NODES)))
; 
; caught WARNING:
;   undefined variable: LAYERED-OUTPUT

;     (SETQ LINEAR-NODE
;             (CAR (SORT (COPY-LIST BEST-SECTIONS) #'> :KEY #'NODE-WEIGHTED-SCORE)))
; 
; caught WARNING:
;   undefined variable: LINEAR-NODE

;     (SETQ LINEAR-OUTPUT
;             (LIST (NODE-SECTIONS LINEAR-NODE)
;                   (TEXTUAL-SUMMARY (LIST LINEAR-NODE))))
; 
; caught WARNING:
;   undefined variable: LINEAR-OUTPUT

;     (SETQ MULTI-OUTPUT
;             (LIST (MAPCAR #'NODE-SECTIONS BEST-SECTIONS)
;                   (TEXTUAL-SUMMARY BEST-SECTIONS)))
; 
; caught WARNING:
;   undefined variable: MULTI-OUTPUT

;     (SETQ OUTPUTS (LIST MULTI-OUTPUT LINEAR-OUTPUT LAYERED-OUTPUT))
; 
; caught WARNING:
;   undefined variable: OUTPUTS

;     (SETQ XML-END "</xml>")
; 
; caught WARNING:
;   undefined variable: XML-END

;     (SETQ XML-START "<?xml version=\"1.0\" encoding=\"UTF-8\"?>")
; 
; caught WARNING:
;   undefined variable: XML-START

;     (SETQ XML-STRING "")
; 
; caught WARNING:
;   undefined variable: XML-STRING
; 
; compilation unit finished
;   Undefined variables:
;     BEST-SECTIONS LAYERED-NODES LAYERED-OUTPUT LINEAR-NODE LINEAR-OUTPUT MULTI-OUTPUT OUTPUTS XML-END XML-START XML-STRING
;   caught 10 WARNING conditions

; in: DEFUN GET-STORIES
;     (MAPCAR #'CAR *SECTIONS*)
; --> LET LET SB-INT:DO-ANONYMOUS BLOCK 
; ==>
;   (LET ((#:G3 #:G4) (#:G1 *SECTIONS*))
;     (TAGBODY
;       (GO #:G7)
;      #:G6
;       (TAGBODY (RPLACD #:G3 (SETQ #)))
;       (PSETQ #:G1 (CDR #:G1))
;      #:G7
;       (UNLESS (OR (ENDP #:G1)) (GO #:G6))
;       (RETURN-FROM #:G5 (PROGN (TRULY-THE LIST #)))))
; 
; caught WARNING:
;   undefined variable: *SECTIONS*

;     (CREATE-FROM-SECTION PARAM SECTION)
; 
; caught STYLE-WARNING:
;   undefined function: CREATE-FROM-SECTION

;     (PRINT-STORIES STORY-LIST)
; 
; caught STYLE-WARNING:
;   undefined function: PRINT-STORIES
; 
; compilation unit finished
;   Undefined functions:
;     CREATE-FROM-SECTION PRINT-STORIES
;   Undefined variable:
;     *SECTIONS*
;   caught 1 WARNING condition
;   caught 2 STYLE-WARNING conditions

; in: DEFUN PRINT-STORIES
;     (PRINT-STORY STORY)
; 
; caught STYLE-WARNING:
;   undefined function: PRINT-STORY
; 
; compilation unit finished
;   Undefined function:
;     PRINT-STORY
;   caught 1 STYLE-WARNING condition

; in: DEFUN PRINT-STORY
;     (FIND SECTION *LOOKUP* :KEY #'CAR)
; 
; caught WARNING:
;   undefined variable: *LOOKUP*

;     (SETQ LAYERED (CADR STORY))
; 
; caught WARNING:
;   undefined variable: LAYERED

;     (SETQ LINEAR (CAR STORY))
; 
; caught WARNING:
;   undefined variable: LINEAR

;     (SETQ SECTION (CAAR STORY))
; 
; caught WARNING:
;   undefined variable: SECTION

;     (SETQ SECTION-TITLE (CADR (FIND SECTION *LOOKUP* :KEY #'CAR)))
; 
; caught WARNING:
;   undefined variable: SECTION-TITLE

;     (SETQ TITLE (CADR (FIND (NTH I #) *LOOKUP* :KEY #'CAR)))
; 
; caught WARNING:
;   undefined variable: TITLE
; 
; compilation unit finished
;   Undefined variables:
;     *LOOKUP* LAYERED LINEAR SECTION SECTION-TITLE TITLE
;   caught 6 WARNING conditions

; in: DEFUN CREATE-FROM-SECTION
;     (FIND (LIST SECTION) *NODES* :KEY #'NODE-SECTIONS :TEST #'EQUAL)
; 
; caught WARNING:
;   undefined variable: *NODES*

;     (HILL-CLIMBING-LAST START-NODE)
; 
; caught STYLE-WARNING:
;   undefined function: HILL-CLIMBING-LAST
; 
; compilation unit finished
;   Undefined function:
;     HILL-CLIMBING-LAST
;   Undefined variable:
;     *NODES*
;   caught 1 WARNING condition
;   caught 1 STYLE-WARNING condition

; in: DEFUN CREATE-NARRATIVE-STRUCTURE
;     (FIND (LIST X) *NODES* :KEY #'NODE-SECTIONS :TEST #'EQUAL)
; 
; caught WARNING:
;   undefined variable: *NODES*
; 
; compilation unit finished
;   Undefined variable:
;     *NODES*
;   caught 1 WARNING condition

; file: /home/jac2349/kmi/decipher/src/main/resources/codes/lisp-process-input.lisp
; in: DEFUN CREATE-NARRATIVE-STRUCTURES
;     (NODE-SECTIONS BEST-SECTIONS)
; --> TRULY-THE SB-KERNEL:%INSTANCE-REF 
; ==>
;   (THE NODE BEST-SECTIONS)
; 
; caught WARNING:
;   Derived type of BEST-SECTIONS is
;     (VALUES LIST &OPTIONAL),
;   conflicting with its asserted type
;     NODE.
;   See also:
;     The SBCL Manual, Node "Handling of Types"

; in: DEFUN CREATE-NARRATIVE-STRUCTURES
;     (FIND (LIST X) *NODES* :KEY #'NODE-SECTIONS :TEST #'EQUAL)
; 
; caught WARNING:
;   undefined variable: *NODES*
; 
; compilation unit finished
;   Undefined variable:
;     *NODES*
;   caught 2 WARNING conditions